apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: stateful
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: stateful
data:
  nginx.conf: |
    events {}

    http {
      proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=ghost_cache:10m max_size=100m inactive=5m use_temp_path=off;

      server {
        listen 80;

        location / {
          proxy_cache ghost_cache;
          #proxy_ignore_headers Cache-Control Expires;
          proxy_cache_valid 200 5m;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          add_header X-Cache $upstream_cache_status;

          proxy_pass http://ghost:2368;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: stateful
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30081

